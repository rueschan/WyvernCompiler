Wyvern compiler, version 0.4
Copyright Â© 2013 by A. Ortiz, ITESM CEM.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or later.
This program has absolutely no warranty.

Included in this release:
   * Lexical analysis
   * Syntactic analysis
   * AST construction
   * Semantic analysis

Syntax OK.
Program
  DefList
    VarDef {VAR, "var", @(7, 1)}
      IdList
        Identifier {IDENTIFIER, "answer", @(7, 5)}
        Identifier {IDENTIFIER, "x", @(7, 13)}
        Identifier {IDENTIFIER, "y", @(7, 16)}
    VarDef {VAR, "var", @(8, 1)}
      IdList
        Identifier {IDENTIFIER, "a", @(8, 5)}
    VarDef {VAR, "var", @(9, 1)}
      IdList
        Identifier {IDENTIFIER, "b", @(9, 5)}
    FunDef {IDENTIFIER, "fun", @(11, 1)}
      IdList
        Identifier {IDENTIFIER, "a", @(11, 5)}
        Identifier {IDENTIFIER, "b", @(11, 8)}
      VarDefList
        VarDef {VAR, "var", @(12, 5)}
          IdList
            Identifier {IDENTIFIER, "x", @(12, 9)}
            Identifier {IDENTIFIER, "y", @(12, 12)}
      StmtList
        FunCall {IDENTIFIER, "printi", @(13, 5)}
          ExprList
            Identifier {IDENTIFIER, "a", @(13, 12)}
    FunDef {IDENTIFIER, "main", @(16, 1)}
      ParamList
      VarDefList
      StmtList
        StmtAssign {IDENTIFIER, "answer", @(17, 5)}
          IntLiteral {INT_LITERAL, "42", @(17, 14)}
        FunCall {IDENTIFIER, "prints", @(18, 5)}
          ExprList
            StrLiteral {STR_LITERAL, ""The answer to the ultimate question of life, "", @(18, 12)}
        FunCall {IDENTIFIER, "prints", @(19, 5)}
          ExprList
            StrLiteral {STR_LITERAL, ""the universe, and everything: "", @(19, 12)}
        FunCall {IDENTIFIER, "printi", @(20, 5)}
          ExprList
            Identifier {IDENTIFIER, "answer", @(20, 12)}
        FunCall {IDENTIFIER, "println", @(21, 5)}
          ExprList
        FunCall {IDENTIFIER, "fun", @(23, 5)}
          ExprList
            IntLiteral {INT_LITERAL, "1", @(23, 9)}
            IntLiteral {INT_LITERAL, "2", @(23, 12)}
Semantics OK.

Global Symbol Table
============
[a, IDENTIFIER]
[answer, IDENTIFIER]
[b, IDENTIFIER]
[x, IDENTIFIER]
[y, IDENTIFIER]

Functions Symbol Table
============
[add, 2, True, null]
[fun, 2, False,
        ------------
          a, True
          b, True
          x, False
          y, False
        ------------]
[get, 2, True, null]
[main, 0, False,
        ------------
        ------------]
[new, 1, True, null]
[printc, 1, True, null]
[printi, 1, True, null]
[println, 0, True, null]
[prints, 1, True, null]
[readi, 0, True, null]
[reads, 0, True, null]
[set, 3, True, null]
[size, 1, True, null]